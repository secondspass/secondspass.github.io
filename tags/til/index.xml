<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Til on S.P.A.M.</title>
    <link>/tags/til/</link>
    <description>Recent content in Til on S.P.A.M.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright (c) 2016 - 2019. Licensed under CC BY-NC-SA 4.0</copyright>
    <lastBuildDate>Tue, 22 Nov 2022 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/til/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>TIL MPI_Comm_spawn</title>
      <link>/posts/2022/til-mpi_comm_spawn/</link>
      <pubDate>Tue, 22 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/2022/til-mpi_comm_spawn/</guid>
      <description>(This post assumes prior experience with MPI).
You may already be familiar with the pattern of using fork and exec to spawn a new process from the the current program. If you&amp;rsquo;re not, this Wikipedia page has a good summary of it. Essentially, you can make your program clone itself at a particular point in the program i.e. creating the &amp;ldquo;child&amp;rdquo; process, and then replace the clone with a completely different program erasing any trace of the original program.</description>
    </item>
    
    <item>
      <title>TIL MPI_Comm_spawn</title>
      <link>/posts/2022/til_mpi_comm_spawn/</link>
      <pubDate>Tue, 22 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/2022/til_mpi_comm_spawn/</guid>
      <description>(This post assumes prior experience with MPI).
I read a blog sometime ago where the author was talking about how he wanted to write more blog posts. One of his strategies was to turn some new thing he had learned, even if was something like a simple language or library feature, and talk about that as a &amp;lsquo;Today I Learned (TIL) xyz&amp;rsquo;. I decided to take a page from his book and write a little bit about a feature of MPI called MPI_Comm_spawn I learned about.</description>
    </item>
    
  </channel>
</rss>